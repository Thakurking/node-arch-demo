version: '3.8'
services:
  #Seller Service
  seller:
    # image: seller
    build:
      context: seller-service
      dockerfile: Dockerfile
    container_name: seller
    ports:
      - "5000:5000"
    restart: always
  
  #Buyer Service
  buyer:
    # image: buyer
    build:
      context: buyer-service
      dockerfile: Dockerfile
    container_name: buyer
    ports:
      - "5001:5001"
    restart: always
  
  #Admin Service
  admin:
    # image: admin
    build:
      context: admin-service
      dockerfile: Dockerfile
    container_name: admin
    ports:
      - "5002:5002"
    restart: always

  #Nginx Service
  nginx:
    image: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
        - "80:80"
    depends_on:
      - seller
      - buyer
      - admin
  
  # rabbitmq:
  #   container_name: "rabbitmq"
  #   image: rabbitmq:3-management-alpine
  #   restart: always
  #   # networks:
  #   #   - myapp_net
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=myuser
  #     - RABBITMQ_DEFAULT_PASS=mypassword
  #   ports:
  #     - '5672:5672'
  #     # HTTP management UI
  #     - '15672:15672'
  #   depends_on:
  #     - seller
  #     - buyer
  #     - admin
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    networks:
        - rabbitmq_nodejs
networks:
  rabbitmq_nodejs:
    driver: bridge

  # database:
  #   image: database
  #   build:
  #     context: database
  #     dockerfile: Dockerfile
  #   container_name: db
  #   ports:
  #     - "5003:5003"
  #   restart: always